# ---------- build stage ----------
FROM golang:1.23 AS build
WORKDIR /app
COPY go.mod go.sum ./
RUN go mod download

COPY . .
# Build the API binary
RUN CGO_ENABLED=0 GOOS=linux go build -o /out/api ./cmd/api

# ---------- runtime stage ----------
FROM alpine:3.20
# su-exec to drop privileges, plus certs & tz
RUN apk add --no-cache ca-certificates tzdata su-exec \
  && addgroup -S app && adduser -S -G app -u 1000 app
WORKDIR /app

# Copy binary
COPY --from=build /out/api /app/api

# Copy entrypoint to a well-known path
COPY scripts/entrypoint.sh /usr/local/bin/entrypoint.sh

# Ensure it's executable and convert CRLF->LF (important on Windows)
RUN chmod +x /usr/local/bin/entrypoint.sh \
  && sed -i 's/\r$//' /usr/local/bin/entrypoint.sh

ENV API_ADDR=:8080
EXPOSE 8080

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
